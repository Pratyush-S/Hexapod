Adafruit_PWMServoDriver pwm1 = Adafruit_PWMServoDriver(&Wire, 0x40);
Adafruit_PWMServoDriver pwm2 = Adafruit_PWMServoDriver(&Wire, 0x41);

//////////////////////////////////////////////////////////////////////

int motor[7][4];

//////////////////////////////////////////////////////////////////////
struct parameters{

int pin;
int value;

  };


//////////////////////////////////////////////////////////////////////
void set_motor(int arm,int part, int percent);



//////////////////////////////////////////////////////////////////////

void setup() {
int i,j;


for(i=1;i<7;i++){
  for(j=1;j<4;j++){
struct parameters motor[i][j];
   }
  }

motor[1][1].pin=5;
motor[1][2].pin=1;
motor[1][3].pin=;

motor[2][1].pin=8;
motor[2][2].pin=9;
motor[2][3].pin=;

motor[3][1].pin=12;
motor[3][2].pin=13;
motor[3][3].pin=;

motor[4][1].pin=2;
motor[4][2].pin=5;
motor[4][3].pin=7;

motor[5][1].pin=8;
motor[5][2].pin=9;
motor[5][3].pin=10;

motor[6][1].pin=12;
motor[6][2].pin=13;
motor[6][3].pin=14;

  Serial.begin(9600);
 mySwitch.enableReceive(0); //pin2 
  pwm1.begin();  
  pwm1.setPWMFreq(60);  // Analog servos run at ~60 Hz updates
  pwm2.begin(); 
  pwm2.setPWMFreq(60);  // Analog servos run at ~60 Hz updates
pinMode(7,OUTPUT);
  delay(10);




}



void loop(){


}
///////////////////////////////////////////////////////////////////////////////////////
void set_motor(int arm,int part, int percent){

///////////////////////////////////
if(arm>3){

int curr_value=motor[arm][part].value;
temp=(percent*1.25)+255;

if(curr_value<temp){
for(;curr_value<temp;curr_value=curr_value+10)
pwm2.setPWM(motor[arm][part].pin, 0,curr_value);
}
else{
for(;curr_value>temp;curr_value=curr_value-10)
pwm2.setPWM(motor[arm][part].pin, 0,curr_value);
}

motor[arm][part].value= curr_value; 

}


/////////////////////////////////////

else if(arm<=3){

int curr_value=motor[arm][part].value;
temp=380-(percent*1.25);

if(curr_value<temp){
for(;curr_value<temp;curr_value=curr_value+10)
pwm1.setPWM(motor[arm][part].pin, 0,curr_value);
}
else{
for(;curr_value>temp;curr_value=curr_value-10)
pwm1.setPWM(motor[arm][part].pin, 0,curr_value);
}

motor[arm][part].value= curr_value; 

}
////////////////////////////////////////////////////////////////////////////////////////



}


